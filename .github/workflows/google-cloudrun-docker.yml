name: "Daily Data Update and Deploy to Cloud Run from Source"

on:
  schedule:
    - cron: "0 12 * * 0" # 2 AM UTC every Sunday
  workflow_dispatch:

env:
  PROJECT_ID: "${{ secrets.PROJECT_ID }}"
  REGION: "${{ secrets.REGION }}"
  SERVICE: "iam-roles-permissions"
  AR_REPOSITIRY: "github-ci-registry"

jobs:
  deploy:
    runs-on: "ubuntu-latest"

    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"

      - name: "Setup Bun"
        uses: "oven-sh/setup-bun@v1"

      - name: "Install dependencies"
        run: "bun install"

      - id: "sdk-auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v2"
        with:
          workload_identity_provider: "${{ secrets.WIF_PROVIDER }}"
          token_format: "access_token"
          service_account: "${{ secrets.WIF_SERVICE_ACCOUNT }}"

      # - name: "Run generate script get latest IAM roles"
      #   run: "bun run generate.ts"

      - id: "docker-auth"
        name: "Docker Auth"
        uses: "docker/login-action@v3"
        with:
          username: "oauth2accesstoken"
          password: "${{ steps.sdk-auth.outputs.auth_token }}"
          registry: "${{ env.REGION }}-docker.pkg.dev"

      - id: "docker-build"
        name: "Build and Push Container"
        run: |-
          REGION="${{ env.REGION }}"
          PROJECT_ID="${{ env.PROJECT_ID }}"
          AR_REPOSITIRY="${{ env.AR_REPOSITIRY }}"
          SERVICE="${{ env.SERVICE }}"
          GITHUB_SHA="${{ github.sha }}"

          DOCKER_TAG="${REGION}-docker.pkg.dev/${PROJECT_ID}/${AR_REPOSITIRY}/${SERVICE}:${GITHUB_SHA}"
          docker build --tag "${DOCKER_TAG}" --cache-from "${REGION}-docker.pkg.dev/${PROJECT_ID}/${AR_REPOSITIRY}/${SERVICE}:latest" .
          docker push "${DOCKER_TAG}"

      - id: "deploy"
        name: "Deploy to Cloud Run"
        uses: "google-github-actions/deploy-cloudrun@v2"
        with:
          service: "${{ env.SERVICE }}"
          region: "${{ env.REGION }}"
          image: "$${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.AR_REPOSITIRY }}/${{ env.SERVICE }}:${{ github.sha }}"
          env_vars: |
            SITE_URL=${{ secrets.SITE_URL }}

      - id: "output"
        name: "Show output"
        run: |-
          echo ${{ steps.deploy.outputs.url }}
